#pragma once

#include "barrett_robot.hpp"

namespace BarrettRobotBSP {
  Vector3d forward_kinematics(const StateT& state) {
    Matrix<double,9,1> eerot;
    Vector3d eetrans;
		double x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47;
		x0=cos((double)state[0]);
		x1=cos((double)state[3]);
		x2=cos((double)state[1]);
		x3=cos((double)state[2]);
		x4=sin((double)state[1]);
		x5=sin((double)state[3]);
		x6=sin((double)state[2]);
		x7=sin((double)state[0]);
		x8=cos((double)state[4]);
		x9=sin((double)state[4]);
		x10=cos((double)state[5]);
		x11=sin((double)state[5]);
		x12=((double(1.00000000000000))*(x1));
		x13=((double(0.0450000000000000))*(x2));
		x14=((double(1.00000000000000))*(x5));
		x15=((double(0.0450000000000000))*(x5));
		x16=((double(0.300000000000000))*(x1));
		x17=((double(1.00000000000000))*(x2));
		x18=((x3)*(x4));
		x19=((x0)*(x4));
		x20=((x4)*(x7));
		x21=((x0)*(x2));
		x22=((x0)*(x6));
		x23=((x3)*(x7));
		x24=((x6)*(x7));
		x25=((x4)*(x6));
		x26=((x0)*(x3));
		x27=((double(1.00000000000000))*(x24));
		x28=((double(0.0450000000000000))*(x24));
		x29=((double(0.0450000000000000))*(x22));
		x30=((x12)*(x2));
		x31=((x14)*(x19));
		x32=((x12)*(x19));
		x33=((x13)*(x26));
		x34=((x14)*(x20));
		x35=((x12)*(x20));
		x36=((x13)*(x23));
		x37=((((x21)*(x3)))+(((double(-1.00000000000000))*(x27))));
		x38=((((x2)*(x23)))+(x22));
		x39=((((double(-1.00000000000000))*(x17)*(x24)))+(x26));
		x40=((((double(-1.00000000000000))*(x17)*(x26)))+(x27));
		x41=((((double(-1.00000000000000))*(x23)))+(((double(-1.00000000000000))*(x17)*(x22))));
		x42=((((double(-1.00000000000000))*(x22)))+(((double(-1.00000000000000))*(x17)*(x23))));
		x43=((((x14)*(x2)))+(((x12)*(x18))));
		x44=((x36)+(x29));
		x45=((((x25)*(x9)))+(((double(-1.00000000000000))*(x43)*(x8))));
		x46=((((x39)*(x9)))+(((x8)*(((((double(-1.00000000000000))*(x34)))+(((x1)*(x38))))))));
		x47=((((x8)*(((((double(-1.00000000000000))*(x31)))+(((x1)*(x37)))))))+(((x41)*(x9))));
		eerot[0]=((((x10)*(x47)))+(((x11)*(((((double(-1.00000000000000))*(x32)))+(((x40)*(x5))))))));
		eerot[1]=((((x9)*(((((double(-1.00000000000000))*(x12)*(x37)))+(x31)))))+(((x41)*(x8))));
		eerot[2]=((((x11)*(x47)))+(((x10)*(((((double(-1.00000000000000))*(x14)*(x40)))+(x32))))));
		eetrans[0]=((double(0.220000000000000))+(((x5)*(((((double(-0.300000000000000))*(x24)))+(((double(0.300000000000000))*(x21)*(x3)))))))+(((double(0.550000000000000))*(x19)))+(((double(-1.00000000000000))*(x28)))+(((x16)*(x19)))+(x33)+(((x1)*(((((double(-1.00000000000000))*(x33)))+(x28)))))+(((x15)*(x19))));
		eerot[3]=((((x11)*(((((double(-1.00000000000000))*(x35)))+(((x42)*(x5)))))))+(((x10)*(x46))));
		eerot[4]=((((x9)*(((((double(-1.00000000000000))*(x12)*(x38)))+(x34)))))+(((x39)*(x8))));
		eerot[5]=((((x10)*(((((double(-1.00000000000000))*(x14)*(x42)))+(x35)))))+(((x11)*(x46))));
		eetrans[1]=((double(0.140000000000000))+(((double(-1.00000000000000))*(x1)*(x44)))+(((double(0.550000000000000))*(x20)))+(((x5)*(((((double(0.300000000000000))*(x22)))+(((double(0.300000000000000))*(x2)*(x23)))))))+(((x16)*(x20)))+(x44)+(((x15)*(x20))));
		eerot[6]=((((x10)*(x45)))+(((x11)*(((((x18)*(x5)))+(((double(-1.00000000000000))*(x30))))))));
		eerot[7]=((((x43)*(x9)))+(((x25)*(x8))));
		eerot[8]=((((x11)*(x45)))+(((x10)*(((((double(-1.00000000000000))*(x14)*(x18)))+(x30))))));
		double x48=((double(0.0450000000000000))*(x18));
		eetrans[2]=((double(0.346000000000000))+(((double(-0.300000000000000))*(x18)*(x5)))+(((double(-1.00000000000000))*(x48)))+(((x16)*(x2)))+(((x1)*(x48)))+(((x13)*(x5)))+(((double(0.550000000000000))*(x2))));
    return eetrans;
  }
}
